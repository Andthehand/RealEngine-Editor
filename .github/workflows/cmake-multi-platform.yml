# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: CMake on multiple platforms

on: [push, pull_request]

jobs:
  build-windows-vs2022:
    name: Windows (VS2022)
    runs-on: windows-latest
    timeout-minutes: 6
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
  
    - name : Cache Submodules
      run: |
        echo "SUBMODULE_ID=$(git submodule)" >> $GITHUB_OUTPUT
      id: cache-submodule
      uses: actions/cache@v4
      with:
        path: |
          RealEngine
          build/RealEngine
        key: ${{ runner.os }}-submodules-${{ steps.version.outputs.TAG_NAME }}

    - name: Update git submodules
      if: steps.cache-submodule.outputs.cache-hit != 'true'
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Configure CMake
      run: >
        cmake -B ${{ github.workspace }}/build 
        -DTRACY_ENABLE=OFF
    
    - name: Build
      run: cmake --build ${{ github.workspace }}/build --parallel

  build-linux-clang:
      name: Linux (Clang)
      runs-on: ubuntu-latest
      timeout-minutes: 6
      env:
        CC: clang
      
      steps:
      - name: Checkout repository
        uses: actions/checkout@v4
  
      - name : Cache Submodules
        id: cache-submodule
        uses: actions/cache@v4
        with:
          path: |
            RealEngine
            build/RealEngine
          key: ${{ runner.os }}-submodules

      - name: Update git submodules
        if: steps.cache-submodule.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install dependencies
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libwayland-dev libxkbcommon-dev xorg-dev
          version: 1.0
  
      - name: Configure CMake
        run: >
          cmake -B ${{ github.workspace }}/build 
          -DTRACY_ENABLE=OFF
      
      - name: Build
        run: cmake --build ${{ github.workspace }}/build --parallel
